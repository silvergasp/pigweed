# Copyright 2020 The Pigweed Authors
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

load(
    "//pw_build:pigweed.bzl",
    "pw_cc_library",
    "pw_facade_toolchain",
)

package(default_visibility = ["//visibility:public"])

licenses(["notice"])

pw_cc_library(
    name = "system_rpc_server",
    srcs = ["system_rpc_server.cc"],
    deps = [
        "//pw_hdlc:pw_rpc",
        "//pw_hdlc:rpc_channel_output",
        "//pw_rpc/system_server:system_server.facade",
        "//pw_stream:socket_stream",
    ],
)

HOST_OS = [
    "linux",
    "macos",
    "windows",
]

[
    pw_facade_toolchain(
        name = "host_backend_" + os,
        backends = {
            # pw_chrono
            "//pw_chrono:system_clock": "//pw_chrono_stl:system_clock",
            "//pw_chrono:system_timer": "//pw_chrono_stl:system_timer",
            # pw_malloc
            "//pw_malloc": "//pw_malloc_freelist",
            # pw_sync
            "//pw_sync:binary_semaphore": "//pw_sync_stl:binary_semaphore",
            "//pw_sync:counting_semaphore": "//pw_sync_stl:counting_semaphore",
            "//pw_sync:mutex": "//pw_sync_stl:mutex",
            "//pw_sync:timed_mutex": "//pw_sync_stl:timed_mutex",
            "//pw_sync:interrupt_spin_lock": "//pw_sync_stl:interrupt_spin_lock",
            # pw_thread
            "//pw_thread:sleep": "//pw_thread_stl:sleep",
            "//pw_thread:thread": "//pw_thread_stl:thread",
            "//pw_thread:yield": "//pw_thread_stl:yield",
            # pw_sys_io
            "//pw_sys_io": "//pw_sys_io_stdio",
        },
        target_compatible_with = [
            "@platforms//os:" + os,
        ],
    )
    for os in HOST_OS
]
